/* This file was generated by SableCC (http://www.sablecc.org/). */

package gdx.game.Scene.node;

import gdx.game.Scene.analysis.*;

@SuppressWarnings("nls")
public final class APostAddIncrement extends PIncrement
{
    private TIdent _ident_;
    private TPlusInc _plusInc_;

    public APostAddIncrement()
    {
        // Constructor
    }

    public APostAddIncrement(
        @SuppressWarnings("hiding") TIdent _ident_,
        @SuppressWarnings("hiding") TPlusInc _plusInc_)
    {
        // Constructor
        setIdent(_ident_);

        setPlusInc(_plusInc_);

    }

    @Override
    public Object clone()
    {
        return new APostAddIncrement(
            cloneNode(this._ident_),
            cloneNode(this._plusInc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPostAddIncrement(this);
    }

    public TIdent getIdent()
    {
        return this._ident_;
    }

    public void setIdent(TIdent node)
    {
        if(this._ident_ != null)
        {
            this._ident_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ident_ = node;
    }

    public TPlusInc getPlusInc()
    {
        return this._plusInc_;
    }

    public void setPlusInc(TPlusInc node)
    {
        if(this._plusInc_ != null)
        {
            this._plusInc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plusInc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ident_)
            + toString(this._plusInc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ident_ == child)
        {
            this._ident_ = null;
            return;
        }

        if(this._plusInc_ == child)
        {
            this._plusInc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ident_ == oldChild)
        {
            setIdent((TIdent) newChild);
            return;
        }

        if(this._plusInc_ == oldChild)
        {
            setPlusInc((TPlusInc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
