/* This file was generated by SableCC (http://www.sablecc.org/). */

package gdx.game.Scene.node;

import gdx.game.Scene.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleAdditiveExp extends PAdditiveExp
{
    private PMultExp _multExp_;

    public ASimpleAdditiveExp()
    {
        // Constructor
    }

    public ASimpleAdditiveExp(
        @SuppressWarnings("hiding") PMultExp _multExp_)
    {
        // Constructor
        setMultExp(_multExp_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleAdditiveExp(
            cloneNode(this._multExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleAdditiveExp(this);
    }

    public PMultExp getMultExp()
    {
        return this._multExp_;
    }

    public void setMultExp(PMultExp node)
    {
        if(this._multExp_ != null)
        {
            this._multExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._multExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._multExp_ == child)
        {
            this._multExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._multExp_ == oldChild)
        {
            setMultExp((PMultExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
