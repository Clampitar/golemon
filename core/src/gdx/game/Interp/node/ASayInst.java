/* This file was generated by SableCC (http://www.sablecc.org/). */

package gdx.game.Interp.node;

import gdx.game.Interp.analysis.*;

@SuppressWarnings("nls")
public final class ASayInst extends PInst
{
    private TSay _say_;
    private PExp _exp_;
    private TSc _sc_;

    public ASayInst()
    {
        // Constructor
    }

    public ASayInst(
        @SuppressWarnings("hiding") TSay _say_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TSc _sc_)
    {
        // Constructor
        setSay(_say_);

        setExp(_exp_);

        setSc(_sc_);

    }

    @Override
    public Object clone()
    {
        return new ASayInst(
            cloneNode(this._say_),
            cloneNode(this._exp_),
            cloneNode(this._sc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASayInst(this);
    }

    public TSay getSay()
    {
        return this._say_;
    }

    public void setSay(TSay node)
    {
        if(this._say_ != null)
        {
            this._say_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._say_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TSc getSc()
    {
        return this._sc_;
    }

    public void setSc(TSc node)
    {
        if(this._sc_ != null)
        {
            this._sc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._say_)
            + toString(this._exp_)
            + toString(this._sc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._say_ == child)
        {
            this._say_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._sc_ == child)
        {
            this._sc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._say_ == oldChild)
        {
            setSay((TSay) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._sc_ == oldChild)
        {
            setSc((TSc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
